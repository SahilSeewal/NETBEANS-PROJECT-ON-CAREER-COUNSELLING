/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package courses;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sahil Seewal
 */
public class admin_delete extends javax.swing.JFrame {
int ks;
    /**
     * Creates new form admin_delete
     */
    public admin_delete() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "8th pass", "10th pass", "12th pass" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.NO", "COURSES"
            }
        ));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(1000);
        }

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sahil Seewal\\Desktop\\red-delete-button-md.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jButton2.setText("HOME");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, 315, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
int pos=jComboBox1.getSelectedIndex();
int gos=jComboBox2.getSelectedIndex(); 
 try
{
   // jTextField1.setText(" ");
 //jTextField2.setText(" ");
 
    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=(Statement)conn.createStatement();
//

//int flag=0;
//String s1;


/*s1=rs.getString(1);
i++;*/



if(pos==1 && gos==0)
{    
//String sql="insert into course1 values('"+s1+"','"+s2+"' )";
String sql="Select* from course1a";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
        DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
        
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}

        while(rs.next())
{int k;
String s=rs.getString(2);
String s1= rs.getString(1);
//k=Integer.parseInt(s);
k=Integer.parseInt(s1);
int t=Integer.parseInt(s1);
int y=t;
        if(k>=1)
        { m.addRow(new Object[] {y,s});
        }

        }

}
    
//int pos=jComboBox1.getSelectedIndex();    
if(pos==1 && gos==1)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);

    String t="Select* from course1a1";
ResultSet r=stmt.executeQuery(t);
//stmt.executeUpdate(sql);
//DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(r.next())
{
String s=r.getString(2);
String s1= r.getString(1);
//k=Integer.parseInt(s);
k=Integer.parseInt(s1);
 //t=Integer.parseInt(s1);
int y=k;
        if(k>=1)
        { m.addRow(new Object[] {y,s});
        }

        }
}
if(pos==1 && gos==2)
{
 String sql="Select* from course1b";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{
m.addRow(new Object[] {y,s});
}


}


    
}
if(pos==2 && gos==0)
{
 String sql="Select* from course2a";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}

int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int p=Integer.parseInt(s1);
int y=p;

if(k>=1)
{m.addRow(new Object[] {y,s});
}
} 
}
if(pos==2 && gos==1)
{
 String sql="Select* from course2b";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{
m.addRow(new Object[] {y,s});
}


}
}

if(pos==2 && gos==2)
{
 String sql="Select* from course2c";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{
m.addRow(new Object[] {y,s});
}


}
}


if(pos==2 && gos==3)
{    
//String sql="insert into course1 values('"+s1+"','"+s2+"' )";
String sql="Select* from course2d";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
        DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
        
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}

        while(rs.next())
{int k;
String s=rs.getString(2);
String s1= rs.getString(1);
//k=Integer.parseInt(s);
k=Integer.parseInt(s1);
int y=k;
        if(k>=1)
        { m.addRow(new Object[] {y,s});
        }

        }

}
    
if(pos==3 && gos==0)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);

    String t="Select* from course3a";
ResultSet r=stmt.executeQuery(t);
//stmt.executeUpdate(sql);
//DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(r.next())
{
String s=r.getString(2);

String s1= r.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{m.addRow(new Object[] {y,s});
}
//is++1
}
}
if(pos==3 && gos==4)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);

    String t="Select* from course3e";
ResultSet r=stmt.executeQuery(t);
//stmt.executeUpdate(sql);
//DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(r.next())
{
String s=r.getString(2);

String s1= r.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{m.addRow(new Object[] {y,s});
}
//is++1
}
}
if(pos==3 && gos==1)
{
 String sql="Select* from course3b";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{
m.addRow(new Object[] {y,s});
}


}


    
}

if(pos==3 && gos==2)
{
 String sql="Select* from course3f";
ResultSet rs=stmt.executeQuery(sql);
//stmt.executeUpdate(sql);
int i;
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(rs.next())
{
String s=rs.getString(2);
String s1= rs.getString(1);
k=Integer.parseInt(s1);
int y=k;
if(k>=1)
{
m.addRow(new Object[] {y,s});
}
}
}
if(pos==3 && gos==3)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);

    String t="Select* from courseg";
ResultSet r=stmt.executeQuery(t);
//stmt.executeUpdate(sql);
//DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
int i;
while(m.getRowCount()>0)
{for(i=0;i<m.getRowCount();i++)
{//String s1=rs.getString(2);
m.removeRow(i);

}
}
int k;
while(r.next())
{
String s=r.getString(2);
String s1= r.getString(1);
//k=Integer.parseInt(s);
k=Integer.parseInt(s1);
 //t=Integer.parseInt(s1);
int y=k;
        if(k>=1)
        { m.addRow(new Object[] {y,s});
        }

        }
}


}

catch(Exception e)
{

System.out.print(" "+e);

}

 
 
       
    }                                          
/*
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {                                       
        // TODO add your handling code here:
 //jComboBox1.disable();
 //jComboBox2.disable();
 
 
 
 
 


    }//GEN-LAST:event_jComboBox2ActionPerformed
*/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
 DefaultTableModel m=(DefaultTableModel) jTable1.getModel();
 
try
{  
//PreparedStatement pst;
int pos=jComboBox1.getSelectedIndex();
int gos=jComboBox2.getSelectedIndex();

int q=JOptionPane.showConfirmDialog(null,"do you want to delete course ?","CONFIRMATION BOX",JOptionPane.YES_NO_OPTION);
if(q==0)

{if(pos==1 && gos==0)
{int SelectedRowIndex=jTable1.getSelectedRow();
//int t1=0;
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course1a";
ResultSet rs=stmt.executeQuery(sql);
//ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);

// t1=Integer.parseInt(s1);

break;
}

i++;
}

String s="delete from course1a where sno="+s1+"";
m.removeRow(SelectedRowIndex);
stmt.executeUpdate(s);


int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course1a set sno="+d+" where sno="+d1+"";

tmt.executeUpdate(p);

j++;


}
//admin_delete();

}

if(pos==1 && gos==1)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course1a1";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course1a1 where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course1a1 set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}






}
if(pos==1 && gos==2)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course1b";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course1b where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course1b set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}


}

if(pos==2 && gos==0)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course2a";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course2a where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course2a set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}



}
if(pos==2 && gos==1)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course2b";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course2b where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course2b set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}



}
if(pos==2 && gos==2)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course2c";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course2c where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course2c set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}



}

if(pos==2 && gos==3)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course2d";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course2d where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course2d set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}


}
if(pos==3 && gos==0)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course3a";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course3a where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course3a set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}



}
if(pos==3 && gos==4)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course3e";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from course3e where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course3e set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}
}

if(pos==3 && gos==1)
{int SelectedRowIndex=jTable1.getSelectedRow();
//int t1=0;
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course3b";
ResultSet rs=stmt.executeQuery(sql);
//ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);

// t1=Integer.parseInt(s1);

break;
}

i++;
}

String s="delete from course3b where sno="+s1+"";
m.removeRow(SelectedRowIndex);
stmt.executeUpdate(s);


int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course3b set sno="+d+" where sno="+d1+"";

tmt.executeUpdate(p);

j++;


}
//admin_delete();

}
if(pos==3 && gos==2)
{int SelectedRowIndex=jTable1.getSelectedRow();
//int t1=0;
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from course3f";
ResultSet rs=stmt.executeQuery(sql);
//ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);

// t1=Integer.parseInt(s1);

break;
}

i++;
}

String s="delete from course3f where sno="+s1+"";
m.removeRow(SelectedRowIndex);
stmt.executeUpdate(s);


int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update course3f set sno="+d+" where sno="+d1+"";

tmt.executeUpdate(p);

j++;


}
//admin_delete();
}
if(pos==3 && gos==3)
{int SelectedRowIndex=jTable1.getSelectedRow();
String s1="a";
String s2="a";
String s3="a";

    Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=conn.createStatement();
Statement tmt=conn.createStatement();
String sql="Select * from courseg";
ResultSet rs=stmt.executeQuery(sql);
int i=0;
while(rs.next())
{if(SelectedRowIndex==i)
{    s1=rs.getString(1);
s2=rs.getString(2);
s3=rs.getString(3);
break;
}

i++;

}
String s="delete from courseg where sno="+s1+"";
m.removeRow(SelectedRowIndex);
tmt.executeUpdate(s);

int l;
int t1=0;
for(l=0;l<jTable1.getRowCount();l++)
{

t1=Integer.parseInt(jTable1.getValueAt(l,0).toString());
}
//t1=t1+1;
System.out.print(t1);


int k;
int j=1;

for(k=0;k<=(t1-SelectedRowIndex-1);k++)
{int d=SelectedRowIndex+k;
int d1=SelectedRowIndex+j;
String p="update courseg set sno="+d+" where sno="+d1+"";

stmt.executeUpdate(p);

j++;


}
}
}
}
catch(Exception e)
{

System.out.print(e);

}

       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
                try
{
    
    //int j;
   /* Class.forName("java.sql.Driver");
String database="jdbc:mysql://localhost:3306/course8";
Connection conn=((Connection)DriverManager.getConnection(database,"root","root"));
Statement stmt=(Statement)conn.createStatement();
String sql="Select* from course2";
ResultSet rs=stmt.executeQuery(sql);
//ResultSet pq=stmt.executeQuery(sql);
//j=0; */
int pos=jComboBox1.getSelectedIndex();
//int gos=jComboBox2.getSelectedIndex();

if(pos==0)
{
    jComboBox2.removeAllItems();
jComboBox2.addItem(" ");
}
if(pos==1)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);
jComboBox2.removeAllItems();
jComboBox2.addItem("SERVICE COURSES");
jComboBox2.addItem("INDUSTRIAL COURSES");
jComboBox2.addItem("AGRICULTURAL COURSES");

}
    
//int pos=jComboBox1.getSelectedIndex();    
if(pos==2)
{    //String s=rs.getString(1);
//String s1= rs.getString(2);
jComboBox2.removeAllItems();
jComboBox2.addItem("SERVICE COURSES");
jComboBox2.addItem("INDUSTRIAL COURSES");
jComboBox2.addItem("AGRICULTURAL COURSES");
jComboBox2.addItem("DIPLOMA COURSES");
}
if(pos==3)
{
    jComboBox2.removeAllItems();
jComboBox2.addItem("MEDICAL");
jComboBox2.addItem("NON MEDICAL");
jComboBox2.addItem("COMMERCE");
jComboBox2.addItem("ARTS");
jComboBox2.addItem("COURSES COMMON TO STREAM");
//jComboBox2.addItem("sss");
}

}
catch(Exception e)
{

System.out.print(" "+e);

}

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
setTitle("DELETE  COURSE");
    }//GEN-LAST:event_formWindowGainedFocus

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                front_page p=new front_page();
        this.hide();
        p.show();

    }//GEN-LAST:event_jButton2ActionPerformed

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_delete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
